% vim: set filetype=erlang shiftwidth=4 tabstop=4 expandtab tw=80:
%%% =====================================================================
%%% This library is free software; you can redistribute it and/or modify
%%% it under the terms of the GNU Lesser General Public License as
%%% published by the Free Software Foundation; either version 2 of the
%%% License, or (at your option) any later version.
%%%
%%% This library is distributed in the hope that it will be useful, but
%%% WITHOUT ANY WARRANTY; without even the implied warranty of
%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
%%% Lesser General Public License for more details.
%%%
%%% You should have received a copy of the GNU Lesser General Public
%%% License along with this library; if not, write to the Free Software
%%% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
%%% USA
%%%
%%% $Id$
%%%
%%% @copyright 2010-2011 Michael Uvarov
%%% @author Michael Uvarov <freeakk@gmail.com>
%%% @see ux
%%% @end
%%% =====================================================================

%%% @doc Functions for extraction UNIDATA.
%%% @private


-module(ux_unidata).
-author('Uvarov Michael <freeakk@gmail.com>').

-export([char_to_upper/1, char_to_lower/1, is_upper/1, is_lower/1,
        char_comment/1, char_type/1, ccc/1, freq_dict/1, 
        nfc_qc/1, nfd_qc/1, nfkc_qc/1, nfkd_qc/1, 
        is_comp_excl/1, is_compat/1, decomp/1, comp/2,
        ducet_r/1, char_block/1,
        get_unidata_dir/0, get_ucadata_dir/0]).
-include("ux_unidata.hrl").

-ifdef(UX_NODATA).
char_to_upper(C) -> C.
char_to_lower(C) -> C.

%% @doc Returns true, if is C is uppercase. 
-spec is_upper(C::char()) -> boolean().
is_upper(_) -> false.
%% @doc Returns true, if is C is lowercase.
-spec is_lower(C::char()) -> boolean().
is_lower(_) -> false.

%% @doc Returns a char type.
-spec char_type(C::char()) -> atom().
char_type(_) -> other.
freq_dict(_) -> 0.

-else.

-include("unidata/char_to_upper.hrl").
-include("unidata/char_to_lower.hrl").
-include("unidata/is_upper.hrl").
-include("unidata/is_lower.hrl").
-include("unidata/char_comment.hrl").
-include("unidata/char_type.hrl").
-include("unidata/freq_dict.hrl").
-include("unidata/ccc.hrl").

%% From http://www.unicode.org/Public/UNIDATA/DerivedNormalizationProps.txt
-include("unidata/nfc_qc.hrl").
-include("unidata/nfd_qc.hrl").
-include("unidata/nfkc_qc.hrl").
-include("unidata/nfkd_qc.hrl").

%% From http://www.unicode.org/Public/UNIDATA/CompositionExclusions.txt
-include("unidata/is_comp_excl.hrl").
-include("unidata/is_compat.hrl").
-include("unidata/decomp.hrl").
-include("unidata/comp.hrl").

% http://unicode.org/reports/tr10/
% From http://unicode.org/Public/UCA/latest/allkeys.txt
% Generated by support/ducet_gen.escript
-include("unidata/ducet.hrl").

% From http://unicode.org/Public/UNIDATA/Blocks.txt
% Generated by support/blocks_gen.escript
-include("unidata/blocks.hrl").

-endif.


priv_dir() ->
    case code:priv_dir(ux) of
        [_|_] = Res -> Res;
        _ -> "../priv"
    end.
get_unidata_dir() -> priv_dir() ++ "/" ++ ?UNIDATA_VERSION ++ "/".
get_ucadata_dir() -> priv_dir() ++ "/" ++ ?UCADATA_VERSION ++ "/".

